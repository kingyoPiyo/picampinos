// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// ser_100base_fx //
// -------------- //

#define ser_100base_fx_wrap_target 2
#define ser_100base_fx_wrap 12

static const uint16_t ser_100base_fx_program_instructions[] = {
    0x80a0, //  0: pull   block                      
    0xa027, //  1: mov    x, osr                     
            //     .wrap_target
    0x8080, //  2: pull   noblock                    
    0x6101, //  3: out    pins, 1                [1] 
    0x6101, //  4: out    pins, 1                [1] 
    0x6101, //  5: out    pins, 1                [1] 
    0x6101, //  6: out    pins, 1                [1] 
    0x6101, //  7: out    pins, 1                [1] 
    0x6101, //  8: out    pins, 1                [1] 
    0x6101, //  9: out    pins, 1                [1] 
    0x6101, // 10: out    pins, 1                [1] 
    0x6101, // 11: out    pins, 1                [1] 
    0x6001, // 12: out    pins, 1                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ser_100base_fx_program = {
    .instructions = ser_100base_fx_program_instructions,
    .length = 13,
    .origin = -1,
};

static inline pio_sm_config ser_100base_fx_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ser_100base_fx_wrap_target, offset + ser_100base_fx_wrap);
    return c;
}

    static inline void ser_100base_fx_program_init(PIO pio, uint sm, uint offset, uint pin_tx)
    {
        pio_sm_set_pins_with_mask(pio, sm, 1u << pin_tx, 1u << pin_tx);
        pio_sm_set_pindirs_with_mask(pio, sm, 1u << pin_tx, 1u << pin_tx);
        pio_gpio_init(pio, pin_tx);
        gpio_set_drive_strength(pin_tx, GPIO_DRIVE_STRENGTH_12MA);
        gpio_set_slew_rate(pin_tx, GPIO_SLEW_RATE_FAST);
        pio_sm_config c = ser_100base_fx_program_get_default_config(offset);
        sm_config_set_out_shift(&c, true, false, 10);   // Shift OSR to Right, Autopull is disabled
        sm_config_set_out_pins(&c, pin_tx, 1);
        sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
        sm_config_set_clkdiv(&c, 1);
        pio_sm_init(pio, sm, offset, &c);
        // Set 100BASE-FX IDLE pattern
        pio_sm_put_blocking(pio, sm, 0b0101010101);
        pio_sm_set_enabled(pio, sm, true);
    }
    static inline void ser_100base_fx_tx_10b(PIO pio, uint sm, uint32_t txdata)
    {
        pio_sm_put_blocking(pio, sm, txdata);
    }

#endif

